""" インデント
set autoindent
set expandtab       " tab を空白文字に置き換え
set shiftwidth=4    " tab 文字の入力幅（自動インデントの時）
set tabstop=4       " tab 文字の表示幅（既存ファイル展開時のタブ表示幅）
set softtabstop=4   " キーボードでtab 文字を入力した時の入力幅

set list
set listchars=tab:>- " tabがある場合表示させる

""" 削除
set backspace=indent,eol,start  " BS で indent,改行,挿入開始前を削除
set smarttab        " BS でインデント幅を削除

"""キーマップ（プラグイン固有のキーマップは下のほうに）
" USKeyboard対策
nnoremap ; :
nnoremap : ;

" esc
imap <c-j> <esc>

" .vimrcを開く$MYVIMRCは~/.vimrcに関する環境変数
nnoremap <Leader>v  :<C-u>edit $MYVIMRC<CR>
" source ~/.vimrc を実行する。
nnoremap <Leader>s  :<C-u>source $MYVIMRC<CR>
" ヘルプを右側に縦分割して開く
nnoremap <Leader>h :<C-u>vert bel h<Space>

""" 検索
set hlsearch        " 検索文字列を色づけ
nmap <Esc><Esc> ;nohlsearch<CR><Esc>
set ignorecase      " 大文字小文字を判別しない
set smartcase       " でも大文字小文字が混ざって入力されたら区別する
set incsearch       " インクリメンタルサーチ

""" コマンド履歴保存数
set history=100

""" コマンドラインモードでTABキーによるファイル名補完を有効にする
set wildmenu wildmode=list:longest,full

""" メニューの日本語化
set langmenu=ja_JP.utf-8

""" 文字コード（Mac 用に utf-8 ベース。Win なら cp932 ベースにする）
set encoding=utf-8       " vim 内部の文字コード（ブランクバッファの文字コードに影響）
set fileencoding=utf-8      " デフォルトのファイル文字コード

""" 表示
set number
" set cursorline
" set cursorcolumn
""" set statusline=%<%f\ %m%r%h%w%{'['.(&fenc!=''?&fenc:&enc).']['.&ff.']'}%=%l,%c%V%8P
set laststatus=2
set notitle "VIMを使ってくれてありがとうのメッセージを表示させない

nnoremap <space> za " スペースで折りたたみ解除

""" バックアップ
set nobackup          " ファイル上書きでバックアップファイルを作成
""" set backupdir=/tmp  " バックアップファイルの保存場所
set autoread        " Vimの外部で変更されたことが判明したとき、自動的に読み直す
set noswapfile      " スワップファイルの作成は行わない
set hidden          " 保存しないで他のファイルを表示することが出来るようにする
set ruler           " ルーラを表示
""" set showcmd         " 入力中のコマンド（キー）を右下に表示
""" set wildmenu        " 入力中のタブ補完を強化
""" set wildmode=list:longest,full " 入力補完の設定（リスト表示で最長一致、その後選択）
set showmatch       " 括弧入力で対応する括弧を一瞬強調
set noundofile      " undofileを保存しない

""" クリップボード
" vim --version | grep clipboardで+clipboardの場合
set clipboard=unnamed,autoselect

" -clipboardの場合 xselをインストールして下記キーマップ設定
vmap <C-c> :w !xsel -ib<CR><CR>

""" template
"autocmd BufNewFile *.py 0r ~/.vim/template/python.txt

""" Function
""" create directory automatically 存在しないディレクトリ作成
augroup vimrc-auto-mkdir
  autocmd!
  autocmd BufWritePre * call s:auto_mkdir(expand('<afile>:p:h'),v:cmdbang)
  function! s:auto_mkdir(dir, force)
    if !isdirectory(a:dir) && (a:force ||
       \ input(printf('"%s" does not exist. Create? [y/N]', a:dir)) =~? '^y\%[es]$')
      call mkdir(iconv(a:dir, &encoding, &termencoding), 'p')
    endif
  endfunction
augroup END

""" 保存時に行末の空白を除去する
autocmd BufWritePre * :%s/\s\+$//ge
""" 保存時にtabをスペースに変換する
autocmd BufWritePre * :%s/\t/  /ge

" カレントディレクトリ設定(自動的に開いたファイルのディレクトリに移動)
" if exists('+autochdir')
    " set autochdir
" endif

" 全角スペースを　ハイライト表示させる
function! ZenkakuSpace()
    highlight ZenkakuSpace cterm=reverse ctermfg=DarkMagenta gui=reverse guifg=DarkMagenta
endfunction

if has('syntax')
    augroup ZenkakuSpace
        autocmd!
        autocmd ColorScheme       * call ZenkakuSpace()
        autocmd VimEnter,WinEnter * match ZenkakuSpace /　/
    augroup END
    call ZenkakuSpace()
endif
